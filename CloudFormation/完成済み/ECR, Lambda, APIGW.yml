AWSTemplateFormatVersion: "2010-09-09"
Description: "Lambda function created by Docker image"

#名前つける
Parameters:
  LambdaName:
    Type: String
    Default: "test_lambda"

  #API Gateway, Lambdaのパラメータ
  apiGatewayName:
    Type: String
    Default: my-api

  apiGatewayStageName:
    Type: String
    Default: test_stage_name

Resources:
  #Lambda用IAMロール(SNSトピックアクセス用)
  LambdaIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
              #AWS:
                #Account
            Action:
              - "sts:AssumeRole"
      #Policy
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: LambdaRole


  #Lambda関数_Docker imageから作成する設定を入れる
  #使用するDocker image：204806963442.dkr.ecr.us-east-1.amazonaws.com/test-repo:10000

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaName
      Description: "Lambda function created by docker image, integrated with HTTP API"
      Handler: index.lambda_handler
      Runtime: python3.12
      MemorySize: 256
      Role: !GetAtt LambdaIamRole.Arn
      Timeout: 300
      Architectures: x86_64

      #ECRイメージURI指定
      Code: {
        ImageUri: 204806963442.dkr.ecr.us-east-1.amazonaws.com/test-repo:10000
        }

  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Description: Example API Gateway
      ProtocolType: HTTP
      Name: !Ref apiGatewayName
      #Target: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunction}/invocations


  HttpApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      StageName: !Ref apiGatewayStageName
      AutoDeploy: True
      
  #LambdaとHTTPAPIを統合
  HttpApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      Description: "HTTP integration test"
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      
      #ここでLambda関数と結合するようARNで指定
      IntegrationUri: !GetAtt LambdaFunction.Arn
      PayloadFormatVersion: '2.0'

  #Lambdaのトリガー設定
  lambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*/*/test"


  #URIのルートを決めてる(なので、InvokeFunctionで、Arnに/testのついたURIを指定することで、目的のAPIにルーティングされる)
  HttpApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: GET /test
      AuthorizationType: NONE
      Target: !Sub "integrations/${HttpApiIntegration}"

#API URLを取得したい
Outputs:
  LambdaArn:
    Value: !GetAtt LambdaFunction.Arn